name: CI Tests for Pull Requests

on:
  pull_request:
    branches: ["main"]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: 🧪 Tests (Python ${{ matrix.python-version }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 Setup Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          check-latest: true

      - name: Set Poetry cache directory (Windows)
        if: runner.os == 'Windows'
        run: echo "POETRY_CACHE_DIR=$env:LOCALAPPDATA\pypoetry\Cache" >> $env:GITHUB_ENV

      - name: Set Poetry cache directory (Unix)
        if: runner.os != 'Windows'
        run: echo "POETRY_CACHE_DIR=$HOME/.cache/pypoetry" >> $GITHUB_ENV

      - name: 🔧 Install Poetry
        id: poetry-version
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade poetry
          echo "version=$(poetry --version | cut -d' ' -f3)" >> $GITHUB_OUTPUT

      - name: 📦 Cache Poetry installation
        uses: actions/cache@v4
        with:
          path: |
            ~/.local
            ${{ env.POETRY_CACHE_DIR }}
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ steps.poetry-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python-version }}-


      - name: 📚 Configure Poetry
        run: poetry config virtualenvs.in-project true

      - name: 📦 Cache virtual environment
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ matrix.python-version }}-

      - name: 📚 Install Dependencies
        run: poetry install --with test --no-interaction

      - name: 🧪 Run Tests
        id: tests
        run: make tests
